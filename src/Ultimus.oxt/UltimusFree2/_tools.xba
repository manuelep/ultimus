<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="_tools" script:language="StarBasic">rem ***** BASIC *****
rem raccolta di utility di vario genere
rem ######################################################################

Function SpeechEngine()as string     
  select case getGUIType
  case 1: SpeechEngine=iif(fileExists (fsProgramDirectory &amp; &quot;eSpeak\command_line\espeak.exe&quot;),&quot;ESPEAK&quot;,&quot;SAPI&quot;) &apos;Win
  case 3: SpeechEngine=iif((fileExists(&quot;/usr/bin/espeak&quot;) or ifileExists(&quot;/usr/local/bin/espeak&quot;)),&quot;ESPEAK&quot;,&quot;SAY&quot;) &apos;Old Mac
  case else: SpeechEngine=iif((fileExists(&quot;/usr/bin/espeak&quot;) or fileExists(&quot;/usr/local/bin/espeak&quot;)),&quot;ESPEAK&quot;,&quot;SAY&quot;) &apos;Posix
  end Select
  Print SpeechEngine
end Function
rem ----------------------------------------------------------------------
Function fsProgramDirectory
Dim c as string
c = environ(&quot;ProgramFiles&quot;)
if instr(c, &quot;\&quot;) &lt;&gt; 0 then
   fsProgramDirectory= c &amp; &quot;\&quot;
else
   fsProgramDirectory=&quot;/usr/bin/&quot;
end If
End Function
rem ----------------------------------------------------------------------
rem induividua la natura del sistema operativo
Function getOS()as String
  Select Case getGUIType
  Case 1: 
    getOS=&quot;WINDOWS&quot;
  Case 3: 
    getOS=&quot;MAC&quot;
  Case 4: 
    If Instr(Environ(&quot;PATH&quot;),&quot;openoffice&quot;)=0 And Instr(Environ(&quot;PATH&quot;),Lcase(fsGetSetting(&quot;ooname&quot;)))=0 Then
     getOS=&quot;OSX&quot;
    Else
     getOS=&quot;UNIX&quot;
    Endif
  End Select
&apos;  Print getOS
End Function
rem ----------------------------------------------------------------------
Function fsGetSetting(sA)
   GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
   Dim oProdNameAccess As Object
   oProdNameAccess=GetRegistryKeyContent(&quot;org.openoffice.Setup/Product&quot;)
&apos;  xray oProdNameAccess
    Select Case Lcase(sA)
    Case &quot;language&quot;
      fsGetSetting=GetStarOfficeLocale().language
   Case &quot;country&quot;
      fsGetSetting=GetStarOfficeLocale().country
   Case &quot;ooname&quot;
      fsGetSetting=oProdNameAccess.getByName(&quot;ooName&quot;)
   Case &quot;ooversion&quot;
      fsGetSetting=oProdNameAccess.getByName(&quot;ooSetupVersion&quot;)
   Case Else
      fsGetSetting=&quot;???&quot;
   End Select
End Function
rem ----------------------------------------------------------------------
Function LeenO_Path
	If NOT GlobalScope.BasicLibraries.isLibraryLoaded( &quot;Tools&quot; ) Then 
 	 GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; ) 
	End If
	Dim pip As Object, extensionLocation As String
	Const extensionIdentifier = &quot;org.giuseppe-vizziello.leeno&quot;
	&apos; Const extensionIdentifier = &quot;put the identifier value from the description.xml here&quot;
	pip = GetDefaultContext.getValueByName(&quot;/singletons/com.sun.star.deployment.PackageInformationProvider&quot;)
	extensionLocation = pip.getPackageLocation(extensionIdentifier)
&apos;	display a human readable address
&apos;	MsgBox(ConvertFromURL(extensionLocation)
	sURL = (ConvertFromURL(extensionLocation))
&apos;	LeenO_Path = FileNameoutofPath(sURL)
	LeenO_Path = extensionLocation &apos; full path
End Function
rem ----------------------------------------------------------------------
sub rir_
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	xray oSheet
	print 
	lLastUrow = getLastUsedRow(oSheet)
	&apos;print lLastUrow
		conta_a = 0
	for i = 1 to lLastUrow
		IF oSheet.GetCellByPosition(1 , I).CellStyle = &quot;Comp-Bianche in mezzo_R&quot; then
						oSheet.getRows().getByindex(I).isvisible = False
		end if
	next
	Barra_chiudi_sempre_4
&apos;	fine:
end sub
rem ----------------------------------------------------------------------
Sub _accoda_files_in_unico
&apos;ACCODA PIÃ¹ FILE DI CALC IN UNO SOLO
	Dim DocName as object, DocUlr as string, dummy()
	Doc = ThisComponent
	Sheet = Doc.Sheets(0) 
	sPath =&quot;W:\_dwg\ULTIMUSFREE\elenchi\Veneto\padova\&quot;  &apos; cartella con i documenti da copiare (non ci deve essere il file destinazione con la macro
	sFileName = Dir(sPath &amp; &quot;*.ods&quot;, 0)
	Barra_Apri_Chiudi_5(&quot;.......................Sto lavorando su &quot;&amp; sFileName, 0)
	Do While (sFileName &lt;&gt; &quot;&quot;)
		c = Sheet.createCursor
		c.gotoEndOfUsedArea(false)
		LastRow = c.RangeAddress.EndRow + 1
		DocUrl = ConvertToURL(sPath &amp; sFileName)
&apos;on error goto errore
		DocName = StarDesktop.loadComponentFromURL (DocUrl, &quot;_blank&quot;,0, Dummy() )
		Sheet1 = DocName.Sheets(0) &apos; questo indica l&apos;index del foglio da copiare
		c = Sheet1.createCursor
		c.gotoEndOfUsedArea(false)
		LastRow1 = c.RangeAddress.EndRow
	&apos;	oStart=uFindString(&quot;ATTENZIONE!&quot;, Sheet1)
	&apos;	Srow=oStart.RangeAddress.EndRow+1
	Srow = 0
		Range = Sheet1.getCellRangeByPosition(0, Srow,  12, LastRow1).getDataArray &apos;(1^ colonna, 1^ riga, 10^ colonna, ultima riga)
		DocName.dispose
		dRange  = Sheet.getCellRangeByPosition(0, LastRow, 12, LastRow1 + LastRow-Srow)
		dRange.setDataArray(Range)
		sFileName = Dir()
	Loop
	print &quot;fatto!&quot;
	errore:
End Sub

Sub inseriscirighe
	Dim oSheet, oRangeAddress
	oSheet = ThisComponent.Sheets(0)
	oRangeAddress = oSheet.getCellRangeByName(&quot;A2:A14&quot;).getRangeAddress()
	oSheet.insertCells(oRangeAddress, com.sun.star.sheet.CellInsertMode.ROWS)
End Sub

Sub Protezione_area (foglio as string, nomearea as string) &apos;usato in annota_pagina_libretto
	Dim rngClear As Object
	Dim oSheet1 As Object
	Dim CellProtStruc As Object
	oSheet1 = ThisComponent.Sheets.GetByName(foglio)
&apos;	oSheet1.Unprotect &quot;&quot;
	rngClear = oSheet1.GetCellRangeByName(nomearea)
rem	rngClear.clearContents( _
rem	com.sun.star.sheet.CellFlags.VALUE _
rem	+ com.sun.star.sheet.CellFlags.STRING _
rem	+ com.sun.star.sheet.CellFlags.DATETIME _
rem	+ com.sun.star.sheet.CellFlags.ANNOTATION _
rem	+ com.sun.star.sheet.CellFlags.FORMULA _
rem	+ com.sun.star.sheet.CellFlags.HARDATTR _
rem	+ com.sun.star.sheet.CellFlags.STYLES _
rem	+ com.sun.star.sheet.CellFlags.OBJECTS _
rem	+ com.sun.star.sheet.CellFlags.EDITATTR)
	CellProtStruc = rngClear.CellProtection
	CellProtStruc.isLocked = True
	rngClear.CellProtection = CellProtStruc
	oSheet1.Protect &quot;&quot;
End Sub
rem ----------------------------------------------------------------------
Sub scrivi_larghezza_colonna
	oSheet =ThisComponent.currentController.activeSheet
	lrow = 0&apos;range2cell
	For n = 0 To 9&apos;getLastUsedCol(oSheet)
		oSheet.GetCellByPosition(n, lrow).setvalue(oSheet.GetCellByPosition(n, lrow).getcolumns.width)
	Next
End Sub
rem ----------------------------------------------------------------------
sub set_larghezza_colonne &apos;regola la larghezza delle colonne a seconda della sheet
	oSheet =ThisComponent.currentController.activeSheet
	Select Case oSheet.Name
		case = &quot;CONTABILITA&quot;
		oSheet.getCellRangeByposition(13,0,1023,0).Columns.Width = 1900 &apos; larghezza colonne importi
		oSheet.getCellRangeByposition(19,0,23,0).Columns.Width = 1000 &apos; larghezza colonne importi
		oSheet.getCellRangeByposition(51,0,1023,0).Columns.IsVisible=false &apos; nascondi colonne
&apos;	oSheet.getRows().getByIndex(&quot;1&quot;).Rows.Height = 850 &apos;altezza riga di intestazione
	rem larghezza colonne
		oSheet.getColumns().getByName(&quot;A&quot;).Columns.Width = 600
		oSheet.getColumns().getByName(&quot;B&quot;).Columns.Width = 1500
		oSheet.getColumns().getByName(&quot;C&quot;).Columns.Width = 7800
		oSheet.getColumns().getByName(&quot;F&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;G&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;H&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;I&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;J&quot;).Columns.Width = 1700
		oSheet.getColumns().getByName(&quot;L&quot;).Columns.Width = 1700
		case = &quot;COMPUTO&quot;
	rem larghezza colonne
		oSheet.getColumns().getByName(&quot;A&quot;).Columns.Width = 600
		oSheet.getColumns().getByName(&quot;B&quot;).Columns.Width = 1500
		oSheet.getColumns().getByName(&quot;C&quot;).Columns.Width = 7800
		oSheet.getColumns().getByName(&quot;F&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;G&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;H&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;I&quot;).Columns.Width = 1300
		oSheet.getColumns().getByName(&quot;J&quot;).Columns.Width = 1700
		oSheet.getColumns().getByName(&quot;L&quot;).Columns.Width = 1700
		oSheet.getColumns().getByName(&quot;S&quot;).Columns.Width = 1700
&apos;		InsRow = fRow+1 &apos;prima riga inserimento in Registro	
		case = &quot;Elenco Prezzi&quot;
		oSheet.getColumns().getByName(&quot;A&quot;).Columns.Width = 2000
		oSheet.getColumns().getByName(&quot;B&quot;).Columns.Width = 13000
		oSheet.getColumns().getByName(&quot;C&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;D&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;E&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;F&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;G&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;H&quot;).Columns.Width = 3000
		oSheet.getColumns().getByName(&quot;I&quot;).Columns.Width = 1200
		oSheet.getColumns().getByName(&quot;J&quot;).Columns.Width = 1200
		oSheet.getColumns().getByName(&quot;K&quot;).Columns.Width = 2200
		oSheet.getColumns().getByName(&quot;L&quot;).Columns.Width = 3000
		oSheet.getColumns().getByName(&quot;M&quot;).Columns.Width = 3000
		oSheet.getColumns().getByName(&quot;N&quot;).Columns.Width = 3000
		oSheet.getColumns().getByName(&quot;O&quot;).Columns.Width = 3000
	end Select
	fissa (0,idxrow+1)
end Sub

Sub AddNamedRange(sName$ as string, s$ as String)
Dim oRange &apos; The created range.
Dim oRanges &apos; All named ranges.
Dim sName$ &apos; Name of the named range to create.
Dim oCell &apos; Cell object.
Dim s$

for i = 1 to 5
 sName$ = i
 oRanges = ThisComponent.NamedRanges
&apos; xray oRanges
 If NOT oRanges.hasByName(sName$) Then
 Dim oCellAddress As new com.sun.star.table.CellAddress
 oCellAddress.Sheet = 2 &apos;id Sheet
		oCellAddress.Column = i &apos;Column i.
 oCellAddress.Row = i + 1 &apos;Row i + 1..
 s$ = &quot;$Foglio3.$B$3:$e$10&quot;
&apos; xray oCellAddress
 rem oRanges.addNewByName(nome_range, stringa_di_definiziones$, oCellAddress, 0)
 oRanges.addNewByName(sName$, s$, oCellAddress, 0)
 End If
next
print &quot;fatto!&quot;
End Sub

sub stili_cella rem crea una sheet e vi inserisce tutti gli stili di cella con relativo esempio
	dim sty()
	dim Doc as object
	dim Sheet as object
	sty()=Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getElementNames()
	Doc = ThisComponent
	If Doc.Sheets.hasByName(&quot;stili&quot;) Then
		Sheet = Doc.Sheets.getByName(&quot;stili&quot;)
		Else
		Sheet = Doc.createInstance(&quot;com.sun.star.sheet.Spreadsheet&quot;)
		Doc.Sheets.insertByName(&quot;stili&quot;, Sheet)
		Sheet = Doc.Sheets.getByName(&quot;stili&quot;)
	End If
	ThisComponent.CurrentController.Select(Sheet.GetCellByPosition(0,0))
	imax=UBound(sty())
	i =0
	for each el in BubbleSortlist(sty())
		Sheet.GetCellByPosition( 0, i).setstring(el)
		Sheet.GetCellByPosition( 1, i).cellstyle = el
		Sheet.GetCellByPosition( 3, i).cellstyle = el
		Sheet.GetCellByPosition( 1, i).setvalue(2000,00)
		Sheet.GetCellByPosition( 3, i).String =&quot;LeenO&quot;
		oStile = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getByName(sty(i))
		oStile.CharFontName = &quot;Liberation Serif&quot;
	i=i+2
	Barra_Apri_Chiudi_5(&quot; Restano &quot;&amp; imax-i &amp;&quot; righe...&quot;, 0)
	next	
&apos;	def=odoc.StyleFamilies.getByName(&quot;Cellstyles&quot;).getElementsNames
print &quot;ok&quot;
end sub

sub studio_stile &apos; serve a capire come influisce lo stile di testo sul numero di righe vvisualizzate nella cella
 &apos;  oCell=ThisComponent.Sheets.GetByName(&quot;Foglio1&quot;).getCellByPosition(1, 1)&apos;B2
 oCell=thiscomponent.currentselection
   
   nSty=oCell.cellstyle
   Dim oSty as object
   oSty = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getbyname(nSty)
   alt = oSty.CharHeight*47&apos;35.2777777778
   topm = oSty.ParaTopMargin
   for nr=2 to 10
      hh=alt+(nr-1)*0.85*alt+topm
      oCell.Rows.Height = hh
      wait 1000
   next
end sub
sub studio_stile__
oCell=thiscomponent.currentselection
&apos;	With oCell.CellAddress
&apos;		icol =.Column
&apos;		iRow =.Row
&apos;	End With



xray oCell
nSty=oCell.cellstyle
&apos;print nsty
Dim dSty as object
dsty = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getbyname(nSty)
&apos;xray dsty
alt = dsty.CharHeight*0.352777777778
topm = dsty.ParaTopMargin*0.352777777778
nr =5
&apos;nr = n+(n-1)*0.18
&apos;print (nr+nr-1)*100*alt+topm
oCell.Rows.Height = nr*100*alt+(nr-1)*30*alt+topm
&apos;	oSheet = ThisComponent.currentController.activeSheet
&apos;	oPrimaCella = oSheet.GetCellByPosition( 0 , 0)
&apos;	oPrimaCella.Rows.Height = 2200
&apos;print alt
&apos;print topm
end sub

SUB Elimina_Nomi_Area_errati &apos;nome eloquente
	Dim Doc As Object
	Dim Sheet As Object
	Dim Cell As Object

	Doc = ThisComponent

	If Doc.Sheets.hasByName(&quot;duplicati&quot;) Then
		Sheet = Doc.Sheets.getByName(&quot;duplicati&quot;)
		Else
		Sheet = Doc.createInstance(&quot;com.sun.star.sheet.Spreadsheet&quot;)
		Doc.Sheets.insertByName(&quot;duplicati&quot;, Sheet)
	End If
	dim n as integer
 	oDoc = ThisComponent
 	oAree=oDoc.NamedRanges
 		oNomiArea() = oAree.ElementNames()
		n = oAree.Count - 1
		Sheet = Doc.Sheets.getByName(&quot;duplicati&quot;)&apos;
&apos;xray oNomiArea
 For i = 0 to n
		Cell = Sheet.getCellByPosition(0, i)				&apos;prima colonna
		Cell.String = oNomiArea(i)							&apos;inserisce nome area
		Cell = Sheet.getCellByPosition(1, i)				&apos;seconda colonna
		Contenuto=oAree.getbyname(oNomiArea(i)).content
		Cell.String = Contenuto								&apos;inserisce il contenuto
ELIMINA_I_NOMI_DI_AREA_ERRATI:
 	if InStr(Contenuto, &quot;#REF!&quot;) or _
			InStr(Contenuto, &quot;#rif!&quot;) then&apos;
&apos;print oNomiArea(i) &amp;&quot; &quot;&amp; Contenuto
			oAree.removeByName(oNomiArea(i))
 	end if
 Next
	Doc.Sheets.removeByName(&quot;duplicati&quot;)
END SUB

SUB DOLO rem SOLO MANUTENZIONE
	&apos;if not ThisComponent.NamedRanges.hasByName(&quot;Serv_gen1_8&quot;) then
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$88:$L$88&quot; , &quot;manodopera&quot;)
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$89:$L$89&quot; , &quot;materiali&quot;)
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$90:$L$90&quot; , &quot;noli&quot;)
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$91:$L$91&quot; , &quot;trasporti&quot;)
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$92:$L$92&quot; , &quot;altre_forniture&quot;)
		rem VECCHIO BLOCCO ANALISI_BART
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$45:$N$51&quot; , &quot;blocco_analisi&quot;)
		rem BLOCCO ANALISI AVCP
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$108:$P$133&quot; , &quot;blocco_analisi&quot;)
&apos;		rifa_nomearea (&quot;S5&quot;, &quot;$B$115:$O$115&quot; , &quot;riga_analisi&quot;)
&apos;		rifa_nomearea (&quot;Elenco Prezzi&quot;, &quot;$A$3:$R$1065&quot; , &quot;elenco_prezzi&quot;)
		
		rifa_nomearea (&quot;S5&quot;, &quot;$A$23:$AW$27&quot; , &quot;Serv_gen_cont&quot;) &apos;blocco_contabilitÃ 

&apos;rifa_nomearea (&quot;Foglio1&quot;, &quot;$A$3:$R$1065&quot; , &quot;elenco_prezzi&quot;)
 oDoc = ThisComponent
 oAree=oDoc.NamedRanges&apos;
&apos;xray oDoc

	&apos;end if
END Sub

sub ripara_computo
	oSheet = ThisComponent.Sheets.getByName(&quot;COMPUTO&quot;)
	lLastUrow = getLastUsedRow(oSheet)
	print lLastUrow
	for i= 0 to lLastUrow
		if oSheet.GetCellByPosition(17, i).cellstyle = &quot;Comp-sotto euri&quot; then &apos;importo sicurezza
			oSheet.GetCellByPosition(17 , i).setformula(&quot;=J&quot; &amp; i+1 &amp; &quot;*AB&quot; &amp; i+1)
		end if
	next
	
end Sub

sub ripara_analisi_ rem cerrate - ho escluso la manodopera dalle maggiorazioni
	oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
	lLastUrow = getLastUsedRow(oSheet)
	&apos;print lLastUrow
	conta_a = 0
	for i = 10184 to lLastUrow
		if oSheet.GetCellbyPosition( 0, i ).string = &quot;A&quot; then 
&apos;			inizio =i+2
			inizio =i
	&apos;	print inizio
		&apos;	conta_a = conta_a +1
		end if
		if oSheet.GetCellbyPosition( 0, i ).string = &quot;F&quot; then 
			fine =i
			&apos;print fine
			Barra_Apri_Chiudi_5(&quot; #&quot;&amp; inizio &amp; &quot; di &quot; &amp; lLastUrow, 0)
			print oSheet.GetCellByPosition(3 , inizio-3).value()*1.2
			Print oSheet.GetCellByPosition(3 , inizio-2).value()
			print oSheet.GetCellByPosition(3 , inizio-1).value()
								
&apos;			oSheet.GetCellByPosition(5 , fine+1).setformula(&quot;=SUM(F&quot;&amp; inizio &amp; &quot;:F&quot;&amp; fine &amp;&quot;)*E&quot;&amp; fine+2 rem SPESE GENERALI
&apos;			oSheet.GetCellByPosition(5 , fine+2).setformula(&quot;=SUM(F&quot;&amp; inizio &amp; &quot;:F&quot;&amp; fine+2 &amp;&quot;)*E&quot;&amp; fine+3 rem UTILI D&apos;IMPRESA
&apos;		oSheet.GetCellByPosition(11 , inizio-7).setformula(conta_a)
&apos;		oSheet.GetCellByPosition(12 , inizio-7).setformula(&quot;=vlookup(A&quot;&amp; inizio-6 &amp;&quot;;base;3;)&quot;
&apos;		oSheet.GetCellByPosition(13 , inizio-7).setformula(&quot;=(G&quot;&amp; inizio-6 &amp;&quot;-M&quot;&amp; inizio-6 &amp;&quot;)/M&quot;&amp; inizio-6
&apos;		oSheet.GetCellByPosition(14 , inizio-7).setformula(&quot;=G&quot;&amp; inizio-1 &amp; &quot;/M&quot;&amp; inizio-6 &apos;ribasso vecchio
&apos;		oSheet.GetCellByPosition(15 , inizio-7).setformula(&quot;=vlookup(A&quot;&amp; inizio-6 &amp;&quot;;base;4;)&quot;
&apos;		oSheet.GetCellByPosition(16 , inizio-7).setformula(&quot;=P&quot;&amp; inizio-6 &amp;&quot;*G&quot;&amp; inizio-6
&apos;		oSheet.GetCellByPosition(17 , inizio-7).setformula(&quot;=P&quot;&amp; inizio-6 &amp;&quot;*M&quot;&amp; inizio-6
&apos;		oSheet.GetCellByPosition(18 , inizio-7).setformula(&quot;=A&quot; &amp; inizio-6)
&apos;	oSheet.GetCellByPosition(19 , inizio-7).setformula(&quot;=M&quot; &amp; inizio-6 &amp;&quot;*U&quot; &amp; inizio-6
&apos;	oSheet.GetCellByPosition(20 , inizio-7).setvalue(&quot;0.00327696945864465&quot;)
			
		end if
	next
	Barra_chiudi_sempre_4
&apos;	fine:
end Sub

sub ripara_analisi_bis rem cerrate - ho escluso la manodopera dalle maggiorazioni
	oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
	lLastUrow = getLastUsedRow(oSheet)
	&apos;print lLastUrow
&apos;	goto fine
	i = 0
	for i = 1 to lLastUrow
	if oSheet.GetCellByPosition( 0, i).cellstyle = &quot;An-lavoraz-Cod-sx&quot; and 	oSheet.GetCellbyPosition( 0, i ).string = &quot;&quot; then 
			&apos;print fine
			Barra_Apri_Chiudi_5(&quot; #&quot;&amp; i &amp; &quot; di &quot; &amp; lLastUrow, 0)
			oSheet.GetCellByPosition(0 , i).setstring(&quot; &quot;)
			
	end if
	next
	Barra_chiudi_sempre_4
	fine:
end Sub

SUB SERVIZIO &apos; una macro per mio uso e consumo che modifico e adatto doi volta in volta (Bart)
	&apos;print &quot;partenza&quot;
	oSheet = ThisComponent.currentController.activeSheet
	ilastRow = getLastUsedRow(oSheet)
&apos;	ilastrow = 14
	lrow = 3
&apos;	do while oSheet.GetCellByPosition(9, ilastrow).value &lt;&gt; &quot;&quot;

	Do while lrow &lt; ilastrow
	&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 10, lrow))
	&apos;	print oSheet.GetCellByPosition(10, lrow).value
		if oSheet.GetCellByPosition(2, lrow).string = &quot;&quot; then
		
	&apos;	xray oSheet.getrows()
			&apos;	If oSheet.getrows().getByIndex(lrow).isVisible = false then
			&apos;			oSheet.getrows().getByIndex(lrow).isVisible = TRUE 
	 		&apos;		else	 
						oSheet.getrows.getByIndex(lrow).isVisible = false 
			&apos;	end if
&apos;	end if
			
	&apos;		percento = oSheet.GetCellByPosition(8, lrow).value
	&apos;		per_g = percento / 100
	&apos;		oSheet.GetCellByPosition(9, lrow).value= per_g
		end if
		lrow = lrow + 1
		&apos;oCell = Osheet.GetCellByPosition(lcol, lrow)
	loop
	print &quot;FINITO:::::!&quot;
END SUB
rem ######################################################################
SUB SERVIZIO__ &apos; una macro per mio uso e consumo che modifico e adatto doi volta in volta
	&apos;print &quot;partenza&quot;
	oSheet = ThisComponent.currentController.activeSheet
	ilastRow = getLastUsedRow(oSheet)
&apos;	ilastrow = 9
	lrow = 2
&apos;	do while oSheet.GetCellByPosition(9, ilastrow).value &lt;&gt; &quot;&quot;

	Do while lrow &lt; ilastrow
	&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 10, lrow))
	&apos;	print oSheet.GetCellByPosition(10, lrow).value
		if oSheet.GetCellByPosition(10, lrow).value &lt;&gt; 0 then 
			percento = oSheet.GetCellByPosition(10, lrow).value
			prezzo = oSheet.GetCellByPosition(7, lrow).value
			importo = percento * prezzo
			oSheet.GetCellByPosition(9, lrow).value= importo
		end if
		lrow = lrow + 1
		&apos;oCell = Osheet.GetCellByPosition(lcol, lrow)
	loop
END SUB


sub paste_format
rem ----------------------------------------------------------------------
rem define variables
dim document   as object
dim dispatcher as object
rem ----------------------------------------------------------------------
rem get access to the document
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

rem ----------------------------------------------------------------------
dim args1(5) as new com.sun.star.beans.PropertyValue
args1(0).Name = &quot;Flags&quot;
args1(0).Value = &quot;T&quot;
args1(1).Name = &quot;FormulaCommand&quot;
args1(1).Value = 0
args1(2).Name = &quot;SkipEmptyCells&quot;
args1(2).Value = false
args1(3).Name = &quot;Transpose&quot;
args1(3).Value = false
args1(4).Name = &quot;AsLink&quot;
args1(4).Value = false
args1(5).Name = &quot;MoveMode&quot;
args1(5).Value = 4

dispatcher.executeDispatch(document, &quot;.uno:InsertContents&quot;, &quot;&quot;, 0, args1())

end sub
</script:module>